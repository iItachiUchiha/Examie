name: Actions Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'docker-compose.yaml'
      - 'ins-config/*'
      - '.github/workflows/wf.yml'
      - 'Backend/*'
      - 'Userclient/*'
      - 'Adminclient/*'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  AWS_REGION: ap-south-1
  PUBLIC_KEY: ${{ secrets.AWS_PUBLIC_KEY }}
  PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  IP_VAR: ${{secrets.AWS_PUBLIC_IP}}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      SERVER_PUBLIC_IP: ${{ steps.set-ip.outputs.instance_public_ip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.2
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME" -backend-config="region=ap-south-1"
        working-directory: ./ins-config

      - name: Terraform Plan
        run: terraform plan -var="region=ap-south-1" -var="public_key=$PUBLIC_SSH_KEY" -var="access_key=$PUBLIC_KEY" -var="secret_key=$PRIVATE_KEY" -var="private_key=$PRIVATE_SSH_KEY" -var="key_name=deployer-key" -out=PLAN
        working-directory: ./ins-config

      - name: Terraform Apply
        run: terraform apply PLAN
        working-directory: ./ins-config

      - name: Set output
        id: set-ip
        run: echo "::set-output name=instance_public_ip::$(terraform output instance_public_ip)"
        working-directory: ./ins-config

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set IP env variable
        run: echo "SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_IP }}" >> $GITHUB_ENV

      - name: Debugging Info
        run: |
          echo "Current directory: $(pwd)"
          env
          cat $GITHUB_ENV
      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ap-south-1
      - name: Deploy Docker images
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry}}
          REPOSITORY: WF_ltd
          IMAGE_TAG: ${{ github.sha }}
          AWS_DEFAULT_REGION: ap-south-1
          SERVER_PUBLIC_IP: ${{secrets.AWS_PUBLIC_IP}} 
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.AWS_PUBLIC_IP}} 
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
          envs: SERVER_PUBLIC_IP,PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
          script: |
            sudo apt update -y
            sudo apt install docker.io -y
            sudo usermod -aG docker $USER
            sudo newgrp docker
            sudo apt install docker-compose -y
            git clone https://${{ secrets.GITHUB_ACTOR }}:${{ secrets.GIT_TOKEN }}@github.com/Ykumar1415/WF_ltd.git
            cd WF_ltd
            sudo fallocate -l 4G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            sudo swapon --show
            free -h
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
            sudo docker-compose up -d

